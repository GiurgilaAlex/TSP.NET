//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyPhotos
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="File", Namespace="http://schemas.datacontract.org/2004/07/MyPhotos")]
    public partial class File : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private System.Guid IdField;
        
        private string NameField;
        
        private string PathField;
        
        private MyPhotos.Property[] PropertiesField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Path
        {
            get
            {
                return this.PathField;
            }
            set
            {
                this.PathField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyPhotos.Property[] Properties
        {
            get
            {
                return this.PropertiesField;
            }
            set
            {
                this.PropertiesField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Property", Namespace="http://schemas.datacontract.org/2004/07/MyPhotos")]
    public partial class Property : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private MyPhotos.File FileField;
        
        private System.Guid FileIdField;
        
        private System.Guid IdField;
        
        private string KeyField;
        
        private string ValueField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyPhotos.File File
        {
            get
            {
                return this.FileField;
            }
            set
            {
                this.FileField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid FileId
        {
            get
            {
                return this.FileIdField;
            }
            set
            {
                this.FileIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Key
        {
            get
            {
                return this.KeyField;
            }
            set
            {
                this.KeyField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value
        {
            get
            {
                return this.ValueField;
            }
            set
            {
                this.ValueField = value;
            }
        }
    }
}


[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(ConfigurationName="IFileProperty")]
public interface IFileProperty
{
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceFile/AddFile", ReplyAction="http://tempuri.org/InterfaceFile/AddFileResponse")]
    void AddFile(MyPhotos.File file);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceFile/AddFile", ReplyAction="http://tempuri.org/InterfaceFile/AddFileResponse")]
    System.Threading.Tasks.Task AddFileAsync(MyPhotos.File file);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceFile/GetAllFiles", ReplyAction="http://tempuri.org/InterfaceFile/GetAllFilesResponse")]
    MyPhotos.File[] GetAllFiles();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceFile/GetAllFiles", ReplyAction="http://tempuri.org/InterfaceFile/GetAllFilesResponse")]
    System.Threading.Tasks.Task<MyPhotos.File[]> GetAllFilesAsync();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceFile/GetFilesByProperty", ReplyAction="http://tempuri.org/InterfaceFile/GetFilesByPropertyResponse")]
    MyPhotos.File[] GetFilesByProperty(string key, string value);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceFile/GetFilesByProperty", ReplyAction="http://tempuri.org/InterfaceFile/GetFilesByPropertyResponse")]
    System.Threading.Tasks.Task<MyPhotos.File[]> GetFilesByPropertyAsync(string key, string value);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceFile/UpdateFile", ReplyAction="http://tempuri.org/InterfaceFile/UpdateFileResponse")]
    void UpdateFile(MyPhotos.File file);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceFile/UpdateFile", ReplyAction="http://tempuri.org/InterfaceFile/UpdateFileResponse")]
    System.Threading.Tasks.Task UpdateFileAsync(MyPhotos.File file);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceFile/DeleteFile", ReplyAction="http://tempuri.org/InterfaceFile/DeleteFileResponse")]
    void DeleteFile(System.Guid id);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceFile/DeleteFile", ReplyAction="http://tempuri.org/InterfaceFile/DeleteFileResponse")]
    System.Threading.Tasks.Task DeleteFileAsync(System.Guid id);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceProperty/AddProperty", ReplyAction="http://tempuri.org/InterfaceProperty/AddPropertyResponse")]
    void AddProperty(MyPhotos.Property property);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceProperty/AddProperty", ReplyAction="http://tempuri.org/InterfaceProperty/AddPropertyResponse")]
    System.Threading.Tasks.Task AddPropertyAsync(MyPhotos.Property property);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceProperty/GetAllProperties", ReplyAction="http://tempuri.org/InterfaceProperty/GetAllPropertiesResponse")]
    string[] GetAllProperties();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceProperty/GetAllProperties", ReplyAction="http://tempuri.org/InterfaceProperty/GetAllPropertiesResponse")]
    System.Threading.Tasks.Task<string[]> GetAllPropertiesAsync();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceProperty/GetPropertiesByFileId", ReplyAction="http://tempuri.org/InterfaceProperty/GetPropertiesByFileIdResponse")]
    MyPhotos.Property[] GetPropertiesByFileId(System.Guid fileId);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceProperty/GetPropertiesByFileId", ReplyAction="http://tempuri.org/InterfaceProperty/GetPropertiesByFileIdResponse")]
    System.Threading.Tasks.Task<MyPhotos.Property[]> GetPropertiesByFileIdAsync(System.Guid fileId);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceProperty/UpdateProperty", ReplyAction="http://tempuri.org/InterfaceProperty/UpdatePropertyResponse")]
    void UpdateProperty(MyPhotos.Property property);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceProperty/UpdateProperty", ReplyAction="http://tempuri.org/InterfaceProperty/UpdatePropertyResponse")]
    System.Threading.Tasks.Task UpdatePropertyAsync(MyPhotos.Property property);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceProperty/DeleteProperty", ReplyAction="http://tempuri.org/InterfaceProperty/DeletePropertyResponse")]
    void DeleteProperty(System.Guid id);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceProperty/DeleteProperty", ReplyAction="http://tempuri.org/InterfaceProperty/DeletePropertyResponse")]
    System.Threading.Tasks.Task DeletePropertyAsync(System.Guid id);
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface IFilePropertyChannel : IFileProperty, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class FilePropertyClient : System.ServiceModel.ClientBase<IFileProperty>, IFileProperty
{
    
    public FilePropertyClient()
    {
    }
    
    public FilePropertyClient(string endpointConfigurationName) : 
            base(endpointConfigurationName)
    {
    }
    
    public FilePropertyClient(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public FilePropertyClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public FilePropertyClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
    }
    
    public void AddFile(MyPhotos.File file)
    {
        base.Channel.AddFile(file);
    }
    
    public System.Threading.Tasks.Task AddFileAsync(MyPhotos.File file)
    {
        return base.Channel.AddFileAsync(file);
    }
    
    public MyPhotos.File[] GetAllFiles()
    {
        return base.Channel.GetAllFiles();
    }
    
    public System.Threading.Tasks.Task<MyPhotos.File[]> GetAllFilesAsync()
    {
        return base.Channel.GetAllFilesAsync();
    }
    
    public MyPhotos.File[] GetFilesByProperty(string key, string value)
    {
        return base.Channel.GetFilesByProperty(key, value);
    }
    
    public System.Threading.Tasks.Task<MyPhotos.File[]> GetFilesByPropertyAsync(string key, string value)
    {
        return base.Channel.GetFilesByPropertyAsync(key, value);
    }
    
    public void UpdateFile(MyPhotos.File file)
    {
        base.Channel.UpdateFile(file);
    }
    
    public System.Threading.Tasks.Task UpdateFileAsync(MyPhotos.File file)
    {
        return base.Channel.UpdateFileAsync(file);
    }
    
    public void DeleteFile(System.Guid id)
    {
        base.Channel.DeleteFile(id);
    }
    
    public System.Threading.Tasks.Task DeleteFileAsync(System.Guid id)
    {
        return base.Channel.DeleteFileAsync(id);
    }
    
    public void AddProperty(MyPhotos.Property property)
    {
        base.Channel.AddProperty(property);
    }
    
    public System.Threading.Tasks.Task AddPropertyAsync(MyPhotos.Property property)
    {
        return base.Channel.AddPropertyAsync(property);
    }
    
    public string[] GetAllProperties()
    {
        return base.Channel.GetAllProperties();
    }
    
    public System.Threading.Tasks.Task<string[]> GetAllPropertiesAsync()
    {
        return base.Channel.GetAllPropertiesAsync();
    }
    
    public MyPhotos.Property[] GetPropertiesByFileId(System.Guid fileId)
    {
        return base.Channel.GetPropertiesByFileId(fileId);
    }
    
    public System.Threading.Tasks.Task<MyPhotos.Property[]> GetPropertiesByFileIdAsync(System.Guid fileId)
    {
        return base.Channel.GetPropertiesByFileIdAsync(fileId);
    }
    
    public void UpdateProperty(MyPhotos.Property property)
    {
        base.Channel.UpdateProperty(property);
    }
    
    public System.Threading.Tasks.Task UpdatePropertyAsync(MyPhotos.Property property)
    {
        return base.Channel.UpdatePropertyAsync(property);
    }
    
    public void DeleteProperty(System.Guid id)
    {
        base.Channel.DeleteProperty(id);
    }
    
    public System.Threading.Tasks.Task DeletePropertyAsync(System.Guid id)
    {
        return base.Channel.DeletePropertyAsync(id);
    }
}
