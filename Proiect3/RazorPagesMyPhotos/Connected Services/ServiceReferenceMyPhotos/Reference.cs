//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServiceReferenceMyPhotos
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1")]
    [System.Runtime.Serialization.DataContractAttribute(Name="File", Namespace="http://schemas.datacontract.org/2004/07/MyPhotos")]
    public partial class File : object
    {
        
        private System.Guid IdField;
        
        private string NameField;
        
        private string PathField;
        
        private System.Collections.Generic.List<ServiceReferenceMyPhotos.Property> PropertiesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Path
        {
            get
            {
                return this.PathField;
            }
            set
            {
                this.PathField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<ServiceReferenceMyPhotos.Property> Properties
        {
            get
            {
                return this.PropertiesField;
            }
            set
            {
                this.PropertiesField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Property", Namespace="http://schemas.datacontract.org/2004/07/MyPhotos")]
    public partial class Property : object
    {
        
        private ServiceReferenceMyPhotos.File FileField;
        
        private System.Guid FileIdField;
        
        private System.Guid IdField;
        
        private string KeyField;
        
        private string ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ServiceReferenceMyPhotos.File File
        {
            get
            {
                return this.FileField;
            }
            set
            {
                this.FileField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid FileId
        {
            get
            {
                return this.FileIdField;
            }
            set
            {
                this.FileIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Key
        {
            get
            {
                return this.KeyField;
            }
            set
            {
                this.KeyField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value
        {
            get
            {
                return this.ValueField;
            }
            set
            {
                this.ValueField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReferenceMyPhotos.IFileProperty")]
    public interface IFileProperty
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceFile/AddFile", ReplyAction="http://tempuri.org/InterfaceFile/AddFileResponse")]
        System.Threading.Tasks.Task AddFileAsync(ServiceReferenceMyPhotos.File file);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceFile/GetAllFiles", ReplyAction="http://tempuri.org/InterfaceFile/GetAllFilesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceMyPhotos.File>> GetAllFilesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceFile/GetFilesByProperty", ReplyAction="http://tempuri.org/InterfaceFile/GetFilesByPropertyResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceMyPhotos.File>> GetFilesByPropertyAsync(string key, string value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceFile/UpdateFile", ReplyAction="http://tempuri.org/InterfaceFile/UpdateFileResponse")]
        System.Threading.Tasks.Task UpdateFileAsync(ServiceReferenceMyPhotos.File file);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceFile/DeleteFile", ReplyAction="http://tempuri.org/InterfaceFile/DeleteFileResponse")]
        System.Threading.Tasks.Task DeleteFileAsync(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceProperty/AddProperty", ReplyAction="http://tempuri.org/InterfaceProperty/AddPropertyResponse")]
        System.Threading.Tasks.Task AddPropertyAsync(ServiceReferenceMyPhotos.Property property);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceProperty/GetAllProperties", ReplyAction="http://tempuri.org/InterfaceProperty/GetAllPropertiesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<string>> GetAllPropertiesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceProperty/GetPropertiesByFileId", ReplyAction="http://tempuri.org/InterfaceProperty/GetPropertiesByFileIdResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceMyPhotos.Property>> GetPropertiesByFileIdAsync(System.Guid fileId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceProperty/UpdateProperty", ReplyAction="http://tempuri.org/InterfaceProperty/UpdatePropertyResponse")]
        System.Threading.Tasks.Task UpdatePropertyAsync(ServiceReferenceMyPhotos.Property property);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceProperty/DeleteProperty", ReplyAction="http://tempuri.org/InterfaceProperty/DeletePropertyResponse")]
        System.Threading.Tasks.Task DeletePropertyAsync(System.Guid id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1")]
    public interface IFilePropertyChannel : ServiceReferenceMyPhotos.IFileProperty, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1")]
    public partial class FilePropertyClient : System.ServiceModel.ClientBase<ServiceReferenceMyPhotos.IFileProperty>, ServiceReferenceMyPhotos.IFileProperty
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public FilePropertyClient() : 
                base(FilePropertyClient.GetDefaultBinding(), FilePropertyClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IFileProperty.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public FilePropertyClient(EndpointConfiguration endpointConfiguration) : 
                base(FilePropertyClient.GetBindingForEndpoint(endpointConfiguration), FilePropertyClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public FilePropertyClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(FilePropertyClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public FilePropertyClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(FilePropertyClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public FilePropertyClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task AddFileAsync(ServiceReferenceMyPhotos.File file)
        {
            return base.Channel.AddFileAsync(file);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceMyPhotos.File>> GetAllFilesAsync()
        {
            return base.Channel.GetAllFilesAsync();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceMyPhotos.File>> GetFilesByPropertyAsync(string key, string value)
        {
            return base.Channel.GetFilesByPropertyAsync(key, value);
        }
        
        public System.Threading.Tasks.Task UpdateFileAsync(ServiceReferenceMyPhotos.File file)
        {
            return base.Channel.UpdateFileAsync(file);
        }
        
        public System.Threading.Tasks.Task DeleteFileAsync(System.Guid id)
        {
            return base.Channel.DeleteFileAsync(id);
        }
        
        public System.Threading.Tasks.Task AddPropertyAsync(ServiceReferenceMyPhotos.Property property)
        {
            return base.Channel.AddPropertyAsync(property);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<string>> GetAllPropertiesAsync()
        {
            return base.Channel.GetAllPropertiesAsync();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceMyPhotos.Property>> GetPropertiesByFileIdAsync(System.Guid fileId)
        {
            return base.Channel.GetPropertiesByFileIdAsync(fileId);
        }
        
        public System.Threading.Tasks.Task UpdatePropertyAsync(ServiceReferenceMyPhotos.Property property)
        {
            return base.Channel.UpdatePropertyAsync(property);
        }
        
        public System.Threading.Tasks.Task DeletePropertyAsync(System.Guid id)
        {
            return base.Channel.DeletePropertyAsync(id);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IFileProperty))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IFileProperty))
            {
                return new System.ServiceModel.EndpointAddress("http://localhost:8000/PC");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return FilePropertyClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IFileProperty);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return FilePropertyClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IFileProperty);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_IFileProperty,
        }
    }
}
